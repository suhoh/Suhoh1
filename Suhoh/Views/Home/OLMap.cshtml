@using Suhoh.Model
@model ViewModel

@{
    ViewBag.Title = "OLMap";
}

<style>
    .olMap {
        opacity: 1;
        background-color: #ffffff;
        width: 100%;
        height: 100%;
        position: static;
        z-index: 1;
        /*position: fixed;
        top: 47px;
        bottom: 0px;
        left: 0px;
        z-index: 1;*/
    }

</style>

<head>
</head>
<body>
    <div style="width: 100%; height: 100%; position: relative;" >
        <div id="@Model.CreatePanelName" class="olMap" onclick="divPanelClicked(this)">
        </div>

        <div class="divMapMaximizeButton">
            <button id="@(String.Format("{0}_Maximize", Model.CreatePanelName))" type="button" class="btnMapMaximize" title="Maximize"
                    onclick="btnMapMaximizeClick(this)"></button>
        </div>

        <div class="divMapLegendButton">
            <button id="@(String.Format("{0}_Legend", Model.CreatePanelName))" type="button" class="btnMapLabel" title="Label"
                    onclick="btnMapLabelClick(this)"></button>
        </div>

        <div class="divMapPropertyButton">
            <button id="@(String.Format("{0}_Property", Model.CreatePanelName))" type="button" class="btnMapProperty" title="Property"
                    onclick="showPropertyPopup(this)"></button>
        </div>

        <div class="divMapCloseButton">
            <button id="@(String.Format("{0}_Close", Model.CreatePanelName))" type="button" class="btnMapClose" title="Close"
                    onclick="btnMapCloseClick(this)"></button>
        </div>

        @*coordinates in WGS84*@
        <button id="@(String.Format("{0}_CoordinatesButton", Model.CreatePanelName))" type="button" class="btnCoordinateToggle" title="Coordinates"
                onclick="btnMapCoordinatesClick(this)">
            <span id="@(String.Format("{0}_CoordinatesButtonText", Model.CreatePanelName))" class="btnbtnCoordinateToggleText">»</span>
        </button>
        <div id="@(String.Format("{0}_Coordinates", Model.CreatePanelName))">
        </div>
    </div>
</body>

@*<div class="loadExcel">
        <button type="button" class="loadExcelButton" title="Load Excel" onclick="loadDataSource()"></button>
    </div>*@

<script>

    var divMap = @Model.CreatePanelName;
    var divId = divMap.id;
    initMap(divId);
    if (_jsonData != null) {
        var map = getMap(divId);
        if (map != null) {
            addPointLayer(_jsonData, map);
            console.log('addPointLayer: OLMap.cshtml');
        }

    }

</script>
