@using Suhoh.Model
@model ViewModel

@{
    ViewBag.Title = "OLMap";
}

<style>
</style>

<head>
</head>
<body>
    <div style="width: 100%; height: 100%; position: relative;">
        <div id="@Model.CreatePanelName" class="olMap" onclick="divPanelClicked(this)">
            @*<div id="popup" title="Welcome to OpenLayers" style="min-width:200px; max-height:300px; overflow:auto"></div>*@

            @*<div id="@(String.Format("{0}_PopupDiv", Model.CreatePanelName))" class="ol-popupDiv">
                    <a href="#" id="@(String.Format("{0}_Popup-closer", Model.CreatePanelName))" class="ol-popup-closer"></a>
                    <div id="@(String.Format("{0}_Popup-navigator", Model.CreatePanelName))">
                        <button id="@(String.Format("{0}_MaptipPrev", Model.CreatePanelName))" onclick="mapTipPrev(this)" type="button" class="mapTipPrev">&#8249;</button>
                        <div id="@(String.Format("{0}_Popup-count", Model.CreatePanelName))"></div>
                        <button id="@(String.Format("{0}_MaptipPrev", Model.CreatePanelName))" onclick="mapTipNext(this)" type="button" class="mapTipNext">&#8250;</button>
                    </div>
                    <div id="@(String.Format("{0}_Popup", Model.CreatePanelName))">
                        <div id="@(String.Format("{0}_Popup-content", Model.CreatePanelName))"></div>
                    </div>
                </div>*@

            <!-- Modal content -->
            <div id="@(String.Format("{0}_PopupContainer", Model.CreatePanelName))" class="popupContainer">
                <div id="@(String.Format("{0}_PopupHeader", Model.CreatePanelName))" class="popupHeader">
                    <span id="@(String.Format("{0}_PopupClose", Model.CreatePanelName))" class="popupClose">&times;</span>
                    <h3>Identify</h3>
                </div>
                <div id="@(String.Format("{0}_PopupBody", Model.CreatePanelName))" class="popupBody">
                </div>
                <div id="@(String.Format("{0}_PopupFooter", Model.CreatePanelName))" class="popupFooter">
                    <h3>Modal Footer</h3>
                </div>
            </div>

        </div>

        <div class="divMapMaximizeButton">
            <button id="@(String.Format("{0}_Maximize", Model.CreatePanelName))" type="button" class="btnMapMaximize" title="Maximize"
                    onclick="btnMapMaximizeClick(this)"></button>
        </div>

        <div class="divMapLegendButton">
            <button id="@(String.Format("{0}_Legend", Model.CreatePanelName))" type="button" class="btnMapLabel" title="Label"
                    onclick="btnMapLabelClick(this)"></button>
        </div>

        <div class="divMapPropertyButton">
            <button id="@(String.Format("{0}_Property", Model.CreatePanelName))" type="button" class="btnMapProperty" title="Property"
                    onclick="showPropertyPopup(this)"></button>
        </div>

        <div class="divMapCloseButton">
            <button id="@(String.Format("{0}_Close", Model.CreatePanelName))" type="button" class="btnMapClose" title="Close"
                    onclick="btnMapCloseClick(this)"></button>
        </div>

        @*coordinates in WGS84*@
        <button id="@(String.Format("{0}_CoordinatesButton", Model.CreatePanelName))" type="button" class="btnCoordinateToggle" title="Coordinates"
                onclick="btnMapCoordinatesClick(this)">
            <span id="@(String.Format("{0}_CoordinatesButtonText", Model.CreatePanelName))" class="btnbtnCoordinateToggleText">»</span>
        </button>
        <div id="@(String.Format("{0}_Coordinates", Model.CreatePanelName))">
        </div>
    </div>
</body>

@*<div class="loadExcel">
        <button type="button" class="loadExcelButton" title="Load Excel" onclick="loadDataSource()"></button>
    </div>*@

<script>

    var divMap = @Model.CreatePanelName;
    var divId = divMap.id;
    initMap(divId);
    if (_jsonData != null) {
        var map = getMap(divId);
        if (map != null) {
            addPointLayer(_jsonData, map);
            console.log('addPointLayer: OLMap.cshtml');
        }

    }

</script>
