@using Suhoh.Model
@model ViewModel



<div id="divBarTitle" class="divBarTitle">
    <table>
        <tr>
            <th id="thBarTitleHeading1" class="thBarTitleHeading1">Title</th>
        </tr>
        <tr>
            <th>
                @Html.DevExpress().TextBoxFor(model => model.BarTitle,
                          settings =>
                          {
                              settings.Name = "tbPropertyBarTitle";
                              settings.Width = 240;
                              settings.Text = "Graph Title";
                              settings.ControlStyle.CssClass = "D3BarTitlePropertyBox";
                              settings.Properties.ClientSideEvents.KeyUp = "tbBarPropertyTitleKeyUp";
                          }
                          ).GetHtml()
            </th>
        </tr>
    </table>
</div>

<div id="divBarLabel" class="divBarLabel">
    <table>
        <tr>
            <th id="thBarLabelHeading1" class="thBarLabelHeading1">
                Label
            </th>
        </tr>
        <tr>
            <th id="thBarXValueChkBox" class="thBarXValueChkBox">
                @Html.DevExpress().CheckBoxFor(settings => Model.CbBarXValueLabel,
                    settings =>
                    {
                        settings.Name = "cbBarXValue";
                        settings.Text = "X Value";
                        settings.Properties.ClientSideEvents.CheckedChanged = "chkBarLabelClicked";
                    }).GetHtml()
            </th>
            <th id="thBarYValueChkBox" class="thBarYValueChkBox">
                @Html.DevExpress().CheckBoxFor(settings => Model.CbBarYValueLabel,
                    settings =>
                    {
                        settings.Name = "cbBarYValue";
                        settings.Text = "Y Value";
                        settings.Properties.ClientSideEvents.CheckedChanged = "chkBarLabelClicked";
                    }).GetHtml()
            </th>
        </tr>
    </table>
</div>

<div id="divBarXYColumn" class="divBarXYColumn">
    <table>
        <tr>
            <th id="thBarXYColumnHeading1" class="thBarXYColumnHeading1">
                XY Columns
            </th>
        </tr>
        <tr>
            <th id="thBarXColumnDropDownLabel" class="thBarXColumnDropDownLabel">
                X Column
            </th>
            <th id="thBarXColumnDropDown" class="thBarXColumnDropDown">
                @Html.DevExpress().DropDownEdit(settings =>
                {
                settings.Name = "ddBarXColumn";
                settings.Width = 167;

                    settings.SetDropDownWindowTemplateContent(c =>
                    {
                        @Html.DevExpress().ListBox(listBoxSettings =>
                        {
                            listBoxSettings.Name = "lbBarXColumn";
                            listBoxSettings.Width = 164;
                            listBoxSettings.Height = 180;
                            listBoxSettings.Properties.EnableSelectAll = true;
                            listBoxSettings.Properties.FilteringSettings.ShowSearchUI = true;
                            listBoxSettings.Properties.SelectionMode = ListEditSelectionMode.CheckColumn;
                            listBoxSettings.Properties.Items.Add("Quantity_m3", "0").Selected = true;
                            listBoxSettings.Properties.Items.Add("Consumptive Use_M3", "1");
                            listBoxSettings.Properties.Items.Add("Pump Rate", "2");

                            listBoxSettings.Properties.ClientSideEvents.SelectedIndexChanged = "cbBarXYColumnChanged";
                            //listBoxSettings.Properties.ClientSideEvents.Init = "cbBarXYColumnChanged";
                        }).Render();
                        ViewContext.Writer.Write("<div style=\"margin: 6px; overflow: hidden;\">");
                        Html.DevExpress().Button(buttonSetting =>
                        {
                            buttonSetting.Name = "lbBarButtonClose";
                            buttonSetting.Text = "Close";
                            buttonSetting.Style.Add("float", "right");
                            buttonSetting.ClientSideEvents.Click = "function(s, e) { ddBarXColumn.HideDropDown(); }";
                            buttonSetting.Height = 26;
                        }).Render();
                        ViewContext.Writer.Write("</div>");
                    });
                }).GetHtml()
            </th>
        </tr>
        <tr>
            <th id="thBarYColumnDropDownLabel" class="thBarYColumnDropDownLabel">
                Y Column
            </th>
            <th id="thBarYColumnDropDown" class="thBarYColumnDropDown">
                @Html.DevExpress().ComboBoxFor(model => model.DdBarYColumn,
                settings =>
                {
                    settings.Name = "cbBarYColumn";
                    settings.Width = 167;
                    settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.StartsWith;
                    settings.Properties.DropDownWidth = 165;
                    settings.Properties.ClientSideEvents.SelectedIndexChanged = "cbBarXYColumnChanged";
                }).BindList(DataEngine.GetYColumn()).GetHtml()

            </th>
        </tr>
    </table>
</div>

<div id="divBarTranspose" class="divBarTranspose">
    <table>
        <tr>
            <th id="thBarTransposeHeading1" class="thBarTransposeHeading1">
                Transpose
            </th>
        </tr>
        <tr>
            <th id="thBarTransposeChkBox" class="thBarTransposeChkBox">
                @Html.DevExpress().CheckBoxFor(settings => Model.CbBarTranspose,
                    settings =>
                    {
                        settings.Name = "cbBarTranspose";
                        settings.Text = "Switch X and Y Axis ";
                        settings.Properties.ClientSideEvents.CheckedChanged = "chkBarTransposeClicked";
                    }).GetHtml()
            </th>
        </tr>
    </table>
</div>

<div id="divBarColorPicker" class="divBarColorPicker">
    <table>
        <tr>
            <th id="thBarColorPickerHeading1" class="thBarColorPickerHeading1">
                Color Picker
            </th>
        </tr>
        <tr>
            <th id="thBarColorPicker" class="thBarColorPicker">
                @Html.DevExpress().ColorEdit(settings => {
                   settings.Name = "ceBarColorPicker";
                   settings.Width = 240;
                   settings.Color = System.Drawing.Color.FromName("red");
                   settings.Properties.EnableCustomColors = true;
                }).GetHtml()
            </th>
        </tr>
    </table>
</div>