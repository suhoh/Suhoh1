@using Suhoh.Model
@model ViewModel

<div id="divTitle" class="divTitle">
    <table>
        <tr>
            <th id="thTitleHeading1" class="thTitleHeading1">Title</th>
        </tr>
        <tr>
            <th>
                @Html.DevExpress().TextBoxFor(model => model.D3GraphTitleProperty,
                          settings =>
                          {
                              settings.Name = "propertyPieTitle";
                              settings.Width = 240;
                              settings.Text = "Graph Title";
                              settings.ControlStyle.CssClass = "D3GraphtitlePropertyBox";
                              settings.Properties.ClientSideEvents.KeyUp = "tbPiePropertyTitleKeyUp";
                          }
                          ).GetHtml()
            </th>
        </tr>
    </table>
</div>

<div id="divLabel" class="divLabel">
    <table>
        <tr>
            <th id="thLabelHeading1" class="thLabelHeading1">
                Label
            </th>
        </tr>
        <tr>
            <th id="thPercentageChkBox" class="thPercentageChkBox">
                @Html.DevExpress().CheckBoxFor(settings => Model.ChkPercentageLabel,
                    settings =>
                    {
                        settings.Name = "chkPiePercentageLabel";
                        settings.Text = "Percentage";
                        settings.Properties.ClientSideEvents.CheckedChanged = "chkPieLabelClicked";
                    }).GetHtml()
            </th>
            <th id="thYValueChkBox" class="thYValueChkBox">
                @Html.DevExpress().CheckBoxFor(settings => Model.ChkYValueLabel,
                    settings =>
                    {
                        settings.Name = "chkPieYValueLabel";
                        settings.Text = "Y Value";
                        settings.Properties.ClientSideEvents.CheckedChanged = "chkPieLabelClicked";
                    }).GetHtml()
            </th>
            <th id="thXValueChkBox" class="thXValueChkBox">
                @Html.DevExpress().CheckBoxFor(settings => Model.ChkXValueLabel,
                    settings =>
                    {
                        settings.Name = "chkPieXValueLabel";
                        settings.Text = "X Value";
                        settings.Properties.ClientSideEvents.CheckedChanged = "chkPieLabelClicked";
                    }).GetHtml()
            </th>
        </tr>
    </table>
</div>

<div id="divXYColumn" class="divXYColumn">
    <table>
        <tr>
            <th id="thXYColumnHeading1" class="thXYColumnHeading1">
                XY Columns
            </th>
        </tr>
        <tr>
            <th id="thXColumnDropDownLabel" class="thXColumnDropDownLabel">
                X Column
            </th>
            <th id="thXColumnDropDown" class="thXColumnDropDown">
                @Html.DevExpress().ComboBoxFor(model => model.DdXColumn,
                    settings =>
                    {
                        settings.Name = "cbPieXColumn";
                        settings.Width = 167;
                        settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.StartsWith;
                        settings.Properties.DropDownWidth = 165;
                        settings.Properties.ClientSideEvents.SelectedIndexChanged = "cbXYColumnDropDownChanged";
                    }).BindList(DataEngine.GetXColumn()).GetHtml()
            </th>
        </tr>
        <tr>
            <th id="thYColumnDropDownLabel" class="thYColumnDropDownLabel">
                Y Column
            </th>
            <th id="thYColumnDropDown" class="thYColumnDropDown">
                @Html.DevExpress().ComboBoxFor(model => model.DdYColumn,
                    settings =>
                    {
                        settings.Name = "cbPieYColumn";
                        settings.Width = 167;
                        settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.StartsWith;
                        settings.Properties.DropDownWidth = 165;
                        settings.Properties.ClientSideEvents.SelectedIndexChanged = "cbXYColumnDropDownChanged";
                    }).BindList(DataEngine.GetYColumn()).GetHtml()
            </th>
        </tr>
    </table>
</div>

<div id="divColorRamp" class="divColorRamp">
        <table>
            <tr>
                <th id="thColorRampHeading" class="thColorRampHeading">
                    Color Ramp
                </th>
            </tr>
            <tr>
                <th id="thRadioColorRampPie" class="thRadioColorRampPie">
                    @Html.DevExpress().RadioButtonListFor(model => Model.ColorRampPie,
                        settings =>
                        {
                            settings.Name = "radioColorRampPie";
                            settings.Properties.RepeatDirection = System.Web.UI.WebControls.RepeatDirection.Horizontal;
                            settings.Properties.Items.Add("HSL", 1);
                            settings.Properties.Items.Add("Rainbow", 2);
                            settings.Properties.Items.Add("Viridis", 3);
                            settings.Properties.Items.Add("Cool", 4);
                            settings.Properties.Items.Add("Hcl", 5);
                            settings.Properties.Items.Add("Grey", 6);
                            settings.Properties.RepeatColumns = 3;
                            settings.Width = 240;
                            settings.Height = 28;
                            settings.ControlStyle.CssClass = "radioColorRampPie";
                            settings.ControlStyle.Border.BorderStyle = System.Web.UI.WebControls.BorderStyle.None;
                            settings.Properties.ValueType = typeof(Int32);
                            settings.Properties.ClientSideEvents.SelectedIndexChanged = "radioColorRampPieClicked";
                        }).GetHtml()
                </th>
            </tr>
        </table>
    </div>

<div id="divColorRampPie" class="divColorRampPie">
</div>