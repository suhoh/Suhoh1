@using Suhoh.Model
@model ViewModel

@{
    ViewBag.Title = "Home";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@*Add new pane*@
<div>
    @Html.DevExpress().PopupControl(
        settings =>
        {
            settings.Name = "popupAddNewPane";
            settings.Width = 250;
            settings.Height = 350;
            settings.AllowDragging = true;
            settings.CloseAction = CloseAction.CloseButton;
            settings.CloseOnEscape = true;
            settings.PopupAnimationType = AnimationType.None;
            settings.HeaderText = "Add new pane";


            settings.ShowPinButton = true;
            settings.ShowCloseButton = true;
            settings.ShowCollapseButton = true;

            settings.Modal = false;

            settings.PopupAnimationType = AnimationType.Slide;

            settings.ResizingMode = ResizingMode.Live;
            settings.AllowResize = true;
            settings.ShowSizeGrip = ShowSizeGrip.True;
            settings.ShowFooter = false;

            settings.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
            settings.PopupVerticalAlign = PopupVerticalAlign.WindowCenter;
            settings.SetContent(() =>
            {
                Html.RenderPartial("AddNewPane", Model);
            });

            //settings.ClientSideEvents.BeforeResizing = "function(s,e){ MainGridView.SetHeight(1); pageControlGrid.SetVisible(false); }";
            //settings.ClientSideEvents.AfterResizing = "function(s, e){ pageControlGrid.SetVisible(true); MainGridView.SetHeight(document.getElementById('containerDiv').clientHeight);}";

            settings.ClientSideEvents.CloseUp = "function(s, e){ ASPxClientEdit.ClearEditorsInContainer('popupAddNewPane', '', true); }";
        }).GetHtml()
</div>

@*OpenLayer Property popup*@
<div>
    @Html.DevExpress().PopupControl(
        settings =>
        {
            settings.Name = "popupOpenLayerProperty";
            settings.Width = 250;
            settings.Height = 350;
            settings.AllowDragging = true;
            settings.CloseAction = CloseAction.CloseButton;
            settings.CloseOnEscape = true;
            settings.PopupAnimationType = AnimationType.None;
            settings.HeaderText = "Property";


            settings.ShowPinButton = true;
            settings.ShowCloseButton = true;
            settings.ShowCollapseButton = true;

            settings.Modal = false;

            settings.PopupAnimationType = AnimationType.Slide;

            settings.ResizingMode = ResizingMode.Live;
            settings.AllowResize = true;
            settings.ShowSizeGrip = ShowSizeGrip.True;
            settings.ShowFooter = false;

            settings.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
            settings.PopupVerticalAlign = PopupVerticalAlign.WindowCenter;
            settings.SetContent(() =>
            {
                Html.RenderPartial("OpenLayerMapProperty", Model);
            });

            //settings.ClientSideEvents.BeforeResizing = "function(s,e){ MainGridView.SetHeight(1); pageControlGrid.SetVisible(false); }";
            //settings.ClientSideEvents.AfterResizing = "function(s, e){ pageControlGrid.SetVisible(true); MainGridView.SetHeight(document.getElementById('containerDiv').clientHeight);}";

            settings.ClientSideEvents.CloseUp = "function(s, e){ ASPxClientEdit.ClearEditorsInContainer('popupOpenLayerProperty', '', true); }";
        }).GetHtml()
</div>

<div>
    @Html.DevExpress().PopupControl(
    settings =>
    {
        settings.Name = "popupGraphProperty";
        settings.Width = 250;
        settings.Height = 370;
        settings.AllowDragging = true;
        settings.CloseAction = CloseAction.CloseButton;
        settings.CloseOnEscape = true;
        settings.PopupAnimationType = AnimationType.None;
        settings.HeaderText = "Property";


        settings.ShowPinButton = true;
        settings.ShowCloseButton = true;
        settings.ShowCollapseButton = true;

        settings.Modal = false;

        settings.PopupAnimationType = AnimationType.Slide;

        settings.ResizingMode = ResizingMode.Live;
        settings.AllowResize = true;
        settings.ShowSizeGrip = ShowSizeGrip.True;
        settings.ShowFooter = false;

        settings.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
        settings.PopupVerticalAlign = PopupVerticalAlign.WindowCenter;
        settings.SetContent(() =>
        {
            Html.RenderPartial("CallbackPopupGraphProperty", Model);
        });

        //settings.ClientSideEvents.BeforeResizing = "function(s,e){ MainGridView.SetHeight(1); pageControlGrid.SetVisible(false); }";
        //settings.ClientSideEvents.AfterResizing = "function(s, e){ pageControlGrid.SetVisible(true); MainGridView.SetHeight(document.getElementById('containerDiv').clientHeight);}";

        settings.ClientSideEvents.CloseUp = "function(s, e){ ASPxClientEdit.ClearEditorsInContainer('popupGraphProperty', '', true); }";
    }).GetHtml()

</div>

<div>
    @Html.DevExpress().LoadingPanel(
        settings =>
        {
            settings.Name = "loadingPanel";
            settings.Modal = false;
            settings.ContainerElementID = "";
        }
    ).GetHtml()
</div>

@section LeftPanelContent {
    @Html.Partial("LeftPanelPartial", Model)
}

@*@using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.Partial("RightPanelPartial")
    }*@

<div id="divRightPanelPartial">
    @Html.Partial("RightPanelPartial", Model)
</div>

<script>
    $(document).ready(function () {
        // init panel settings
        radioActivePanelSettingsClicked();
    });
</script>

