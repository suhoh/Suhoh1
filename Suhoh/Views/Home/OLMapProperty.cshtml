@using Suhoh.Model
@model ViewModel

@*Title*@
<div id="divTitle" class="divTitle">
    <table>
        <tr>
            <th style="float: left; margin-left: 2px">Map Title</th>
        </tr>
        <tr>
            <th style="float: left; margin-top: 5px">
                @Html.DevExpress().TextBoxFor(model => model.MapTitle,
                          settings =>
                          {
                              settings.Name = "tbPropertyMapTitle";
                              settings.Width = 240;
                              settings.Text = "Map Title";
                              settings.ControlStyle.CssClass = "";
                              settings.Properties.ClientSideEvents.KeyUp = "";
                          }
                          ).GetHtml()
            </th>
        </tr>
    </table>
</div>

@*Show coordinates and show label*@
<div style="margin-top: 10px">
    <table>
        <tr>
            <th class="thShowCoordinatesChkBox">
                @Html.DevExpress().CheckBoxFor(settings => Model.ChkShowCoordinates,
                       settings =>
                       {
                           settings.Name = "chkShowCoordinates";
                           settings.Text = "Show Coordinates";
                           settings.Properties.ClientSideEvents.CheckedChanged = "chkShowCoordinatesChanged";
                       }).GetHtml()
            </th>
        </tr>
        <tr>
            <th class="thShowLabelChkBox">
                @Html.DevExpress().CheckBoxFor(settings => Model.ChkShowLabel,
                       settings =>
                       {
                           settings.Name = "chkShowLabel";
                           settings.Text = "Show Label";
                           settings.Properties.ClientSideEvents.CheckedChanged = "chkShowLabelChanged";
                       }).GetHtml()
            </th>
            <th class="thShowLabelComboBox">
                @Html.DevExpress().ComboBox(
                    settings =>
                    {
                        settings.Name = "cbShowLabel";
                        settings.Width = 148;
                        settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.StartsWith;
                        settings.Properties.DropDownWidth = 148;
                        settings.ClientEnabled = false;
                        settings.Properties.ClientSideEvents.SelectedIndexChanged = "cbShowLabelChanged";
                    }).GetHtml()
            </th>
        </tr>
    </table>
</div>

@*Lat/lon column names*@
<table>
    <tr>
        <th id="thXYColumnHeading1" class="thXYColumnHeading1">
            XY Columns
        </th>
    </tr>
    <tr>
        <th id="thXColumnDropDownLabel" class="thXColumnDropDownLabel">
            X Column
        </th>
        <th id="thXColumnDropDown" class="thXColumnDropDown">
            @Html.DevExpress().ComboBox(
                settings =>
                {
                    settings.Name = "cbMapXColumn";
                    settings.Width = 167;
                    settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.StartsWith;
                    settings.Properties.DropDownWidth = 165;
                    settings.Properties.ClientSideEvents.SelectedIndexChanged = "cbXYColumnMapChanged";
                }).BindList(DataEngine.GetXColumn()).GetHtml()
        </th>
    </tr>
    <tr>
        <th id="thYColumnDropDownLabel" class="thYColumnDropDownLabel">
            Y Column
        </th>
        <th id="thYColumnDropDown" class="thYColumnDropDown">
            @Html.DevExpress().ComboBox(
                settings =>
                {
                    settings.Name = "cbMapYColumn";
                    settings.Width = 167;
                    settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.StartsWith;
                    settings.Properties.DropDownWidth = 165;
                    settings.Properties.ClientSideEvents.SelectedIndexChanged = "cbXYColumnMapChanged";
                }).BindList(DataEngine.GetYColumn()).GetHtml()
        </th>
    </tr>
</table>

@*GoTo location*@
<div style="margin-top: 10px">
    <table>
        <tr>
            <th style="float: left; margin-left: 2px">Go To Location</th>
            <th style="float: left">
                @Html.DevExpress().RadioButtonListFor(model => model.AddPaneDirection,
                    settings =>
                    {
                        settings.Name = "radioMapGoTo";
                        settings.Properties.RepeatDirection = System.Web.UI.WebControls.RepeatDirection.Horizontal;
                        settings.Properties.Items.Add("Lon/Lat", 1);
                        settings.Properties.Items.Add("ATS", 2);
                        settings.Width = 160;
                        settings.Height = 28;
                        settings.ControlStyle.Border.BorderStyle = System.Web.UI.WebControls.BorderStyle.None;
                        settings.Properties.ValueType = typeof(Int32);
                        settings.Properties.ClientSideEvents.SelectedIndexChanged = "radioMapGoToClick";
                    }).GetHtml()
            </th>
        </tr>
        @*Lon/Lat*@
        <tr id="trGoToLatLonX">
            <th class="thOpenLayerGoToXLabel">X:</th>
            <th class="thOpenLayerGotoXTextBox">
                @Html.DevExpress().TextBox(
                          settings =>
                          {
                              settings.Name = "tbMapGoToX";
                              settings.Width = 90;
                              settings.Properties.NullText = "Longitude";
                              settings.Text = "";
                          }
                          ).GetHtml()
            </th>
            <th class="thOpenLayerGoToYLabel">Y:</th>
            <th class="thOpenLayerGotoYTextBox">
                @Html.DevExpress().TextBox(
                          settings =>
                          {
                              settings.Name = "tbMapGoToY";
                              settings.Width = 90;
                              settings.Properties.NullText = "Latitude";
                              settings.Text = "";
                          }
                          ).GetHtml()
            </th>
        </tr>
        <tr id="trGoToLatLonY">

            <th class="thOpenLayerGoToButton">
                @Html.DevExpress().Button(
                settings =>
                {
                    settings.Name = "btnMapGoToCoordinates";
                    settings.Width = 60;
                    settings.Text = "Go To";
                    settings.ClientSideEvents.Click = "btnMapPropertyGoToLonLatClick";
                }
                ).GetHtml()
            </th>
        </tr>
        @*ATS*@
        <tr>
        <tr id="thAtsHeader">
            <th style="float: left; font-weight: normal; margin-top: -2px; margin-left: 11px; margin-bottom: 2px">Section</th>
            <th style="float: left; font-weight: normal; margin-top: -2px; margin-left: 18px;">Township</th>
            <th style="float: left; font-weight: normal; margin-top: -2px; margin-left: 17px;">Range</th>
            <th style="float: left; font-weight: normal; margin-top: -2px; margin-left: 26px;">Mer.</th>
        </tr>
        <tr id="trGoToAts">
            <th class="cbLeftPanelSearchSEC">
                @Html.DevExpress().ComboBox(
                  settings =>
                  {
                      settings.Name = "cbGoToAtsSec";
                      settings.Width = 47;
                      settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.StartsWith;
                      settings.Properties.DropDownWidth = 46;
                      settings.Properties.ClientSideEvents.SelectedIndexChanged = "cbGoToAtsSecChanged";
                  }).BindList(DataEngine.SectionList()).GetHtml()
            </th>
            <th class="cbLeftPanelSearchTWP">
                @Html.DevExpress().ComboBox(
                  settings =>
                  {
                      settings.Name = "cbGoToAtsTwp";
                      settings.Width = 55;
                      settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.StartsWith;
                      settings.Properties.DropDownWidth = 54;
                      settings.Properties.ClientSideEvents.SelectedIndexChanged = "cbGoToAtsTwpChanged";
                  }).BindList(DataEngine.TownshipList()).GetHtml()
            </th>
            <th class="cbLeftPanelSearchRGE">
                @Html.DevExpress().ComboBox(
                  settings =>
                  {
                      settings.Name = "cbGoToAtsRge";
                      settings.Width = 47;
                      settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.StartsWith;
                      settings.Properties.DropDownWidth = 46;
                      settings.Properties.ClientSideEvents.SelectedIndexChanged = "cbGoToAtsRgeChanged";
                  }).BindList(DataEngine.RangeList()).GetHtml()
            </th>
            <th class="cbLeftPanelSearchMER">
                @Html.DevExpress().ComboBox(
                  settings =>
                  {
                      settings.Name = "cbGoToAtsMer";
                      settings.Width = 45;
                      settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.StartsWith;
                      settings.Properties.DropDownWidth = 44;
                      settings.Properties.ClientSideEvents.SelectedIndexChanged = "cbGoToAtsMerChanged";
                  }).BindList(DataEngine.MeridianList()).GetHtml()
            </th>

            <th class="thOpenLayerGoToButton">
                @Html.DevExpress().Button(
                settings =>
                {
                    settings.Name = "btnMapPropertyGoToAts";
                    settings.Width = 60;
                    settings.Text = "Go To";
                    settings.ClientSideEvents.Click = "btnMapPropertyGoToAtsClick";
                }
                ).GetHtml()
            </th>
        </tr>
    </table>
</div>

@*Choose basemap*@
<div style="margin-top: 3px">
    <table>
        <tr>
            <th style="float: left; margin-left: 2px">Basemap</th>
        </tr>
        <tr>
            <th style="float: left; margin-top: 5px">
                @Html.DevExpress().ComboBoxFor(model => model.ActiveBasemap,
                  settings =>
                  {
                      settings.Name = "cbBasemap";
                      settings.Width = 240;
                      settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.StartsWith;
                      settings.Properties.DropDownWidth = 239;
                      settings.Properties.ClientSideEvents.SelectedIndexChanged = "cbBasemapChanged";
                  }).BindList(DataEngine.BasemapList()).GetHtml()
            </th>
        </tr>
    </table>
</div>
